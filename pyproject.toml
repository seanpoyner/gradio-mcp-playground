[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gradio-mcp-playground"
version = "0.1.0"
description = "A comprehensive toolkit for building and managing Gradio apps as MCP servers"
authors = [{name = "Gradio MCP Playground Contributors"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "gradio",
    "mcp",
    "model-context-protocol",
    "ai",
    "machine-learning",
    "llm",
    "tools",
    "claude",
    "anthropic"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "gradio>=4.44.0",
    "click>=8.0.0",
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "watchdog>=3.0.0",
    "psutil>=5.9.0",
    "anthropic>=0.18.0",
    "huggingface-hub>=0.20.0",
    "gradio-client>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]

all = [
    "fastmcp>=0.1.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "pillow>=10.0.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "diffusers>=0.20.0"
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0"
]

[project.urls]
Homepage = "https://github.com/gradio-mcp-playground/gradio-mcp-playground"
Documentation = "https://gradio-mcp-playground.readthedocs.io"
Repository = "https://github.com/gradio-mcp-playground/gradio-mcp-playground"
Issues = "https://github.com/gradio-mcp-playground/gradio-mcp-playground/issues"

[project.scripts]
gmp = "gradio_mcp_playground.cli:main"
gradio-mcp = "gradio_mcp_playground.cli:main"

[tool.setuptools]
packages = ["gradio_mcp_playground"]

[tool.setuptools.package-data]
gradio_mcp_playground = [
    "templates/**/*",
    "static/**/*",
    "*.json",
    "*.yaml",
    "*.yml"
]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "B905",  # `zip()` without an explicit `strict=` parameter
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
